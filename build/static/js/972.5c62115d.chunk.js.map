{"version":3,"file":"static/js/972.5c62115d.chunk.js","mappings":"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","sources":["pages/Articles/index.tsx"],"sourcesContent":["import {\n    Button,\n    Form,\n    InputNumber,\n    Modal,\n    Select,\n    Space,\n    Table,\n    Tag,\n} from \"antd\"\nimport { ColumnsType } from \"antd/es/table\"\nimport type { Article, Tag as TTag } from \"@/types\"\nimport PageCard from \"@/components/PageCard\"\nimport { ExclamationCircleFilled } from \"@ant-design/icons\"\nimport { useState } from \"react\"\nimport { useLoaderData, useNavigate } from \"react-router-dom\"\nimport * as api from \"@/requests\"\n\nexport const loader = async () => {\n    // return await api.listArticles()\n    return { articles: await api.listArticles(), tags: await api.listTags() }\n}\nconst Articles = () => {\n    const loaderData = useLoaderData() as { articles: Article[]; tags: TTag[] }\n    const [articles, setArticles] = useState(loaderData.articles)\n\n    const [tags] = useState(loaderData.tags)\n    const [isModalEditTagsOpen, setIsModalEditTagsOpen] = useState(false)\n    const [isModalEditTagsConfirmLoading, setIsModalEditTagsConfirmLoading] =\n        useState(false)\n    const [formEditTags] = Form.useForm()\n\n    const navigate = useNavigate()\n\n    const columns: ColumnsType<Article> = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n        },\n        {\n            title: \"Titles\",\n            dataIndex: \"title\",\n        },\n        {\n            title: \"Abstract\",\n            dataIndex: \"abstract\",\n        },\n        {\n            title: \"Tags\",\n            key: \"tags\",\n            render: (_, { tags }) => (\n                <>\n                    {tags.map((tag) => {\n                        let color = tag.length > 5 ? \"geekblue\" : \"green\"\n                        return (\n                            <Tag color={color} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </>\n            ),\n        },\n        {\n            title: \"Visibility\",\n            key: \"visible\",\n            render: (_, { visible }) => (\n                <Tag color={!visible ? \"red\" : \"green\"}>\n                    {visible ? \"TRUE\" : \"FALSE\"}\n                </Tag>\n            ),\n        },\n        {\n            title: \"Create Time\",\n            dataIndex: \"createTime\",\n        },\n        {\n            title: \"Action\",\n            key: \"action\",\n            render: (_, record) => (\n                <Space size=\"middle\">\n                    <Button\n                        onClick={() => navigate(`/article/edit/${record.id}`)}\n                        type=\"link\"\n                    >\n                        Edit Article\n                    </Button>\n                    <Button\n                        onClick={() => showModalArticleTags(record)}\n                        type=\"link\"\n                    >\n                        Edit Tags\n                    </Button>\n                    <Button\n                        type=\"link\"\n                        onClick={() => updateArticleVisibility(record)}\n                    >\n                        {record.visible ? \"Hide\" : \"Show\"}\n                    </Button>\n                    <Button\n                        onClick={() => showDeleteConfirm(record)}\n                        type=\"link\"\n                    >\n                        Delete\n                    </Button>\n                </Space>\n            ),\n        },\n    ]\n\n    const refreshArticles = async () => {\n        const articles = await api.listArticles()\n        setArticles(articles)\n    }\n\n    const showDeleteConfirm = (article: Article) => {\n        Modal.confirm({\n            title: \"This action is not reversible.\",\n            icon: <ExclamationCircleFilled />,\n            content: (\n                <>\n                    {`Are you sure to delete this article (${article.title})?`}\n                    <br />\n                    {`This action is not reversible.`}\n                </>\n            ),\n            okText: \"Yes\",\n            okType: \"danger\",\n            cancelText: \"No\",\n            onOk: async () => {\n                await api.deleteArticle(article.id)\n                refreshArticles()\n            },\n        })\n    }\n\n    const updateArticleVisibility = async (article: Article) => {\n        try {\n            await api.updateArticle(article.id, { visible: !article.visible })\n            refreshArticles()\n        } catch (err) {}\n    }\n\n    const showModalArticleTags = async (article: Article) => {\n        formEditTags.setFieldValue(\"id\", article.id)\n        formEditTags.setFieldValue(\"tags\", article.tags)\n        setIsModalEditTagsOpen(true)\n    }\n\n    const updateArticleTags = async (articleId: number, tags: string[]) => {\n        try {\n            // console.log(articleId, tags)\n            setIsModalEditTagsConfirmLoading(true)\n            await api.updateArticle(articleId, { tags: tags })\n            setIsModalEditTagsOpen(false)\n            refreshArticles()\n        } catch (err) {\n        } finally {\n            setIsModalEditTagsConfirmLoading(false)\n        }\n    }\n\n    return (\n        <>\n            <PageCard\n                title=\"Articles\"\n                extra={\n                    <Button onClick={() => navigate(\"/article/add\")}>\n                        Add Article\n                    </Button>\n                }\n            >\n                <Table columns={columns} dataSource={articles} rowKey=\"id\" />\n            </PageCard>\n            <Modal\n                title=\"Edit Tag\"\n                open={isModalEditTagsOpen}\n                onOk={() => formEditTags.submit()}\n                onCancel={() => setIsModalEditTagsOpen(false)}\n                confirmLoading={isModalEditTagsConfirmLoading}\n                afterClose={() => formEditTags.resetFields()}\n            >\n                <Form\n                    name=\"formEditTags\"\n                    form={formEditTags}\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    style={{ maxWidth: 600 }}\n                    onFinish={(values) => {\n                        updateArticleTags(values.id, values.tags)\n                    }}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item label=\"id\" name=\"id\" hidden>\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item label=\"Tags\" name=\"tags\">\n                        <Select\n                            mode=\"multiple\"\n                            allowClear\n                            style={{ width: \"100%\" }}\n                            placeholder=\"Please select\"\n                            options={tags.map((tag) => {\n                                return { label: tag.tag, value: tag.tag }\n                            })}\n                        />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    )\n}\n\nexport const Component = Articles\nexport default Articles\n"],"names":["loader","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","api","t0","sent","t1","abrupt","articles","tags","stop","apply","arguments","Articles","loaderData","useLoaderData","_useState","useState","_useState2","_slicedToArray","setArticles","_useState3","_useState5","_useState6","isModalEditTagsOpen","setIsModalEditTagsOpen","_useState7","_useState8","isModalEditTagsConfirmLoading","setIsModalEditTagsConfirmLoading","_Form$useForm","Form","useForm","formEditTags","navigate","useNavigate","columns","title","dataIndex","key","render","_","_ref2","_jsx","_Fragment","children","map","tag","color","length","Tag","toUpperCase","_ref3","visible","record","_jsxs","Space","size","Button","onClick","concat","id","type","showModalArticleTags","updateArticleVisibility","showDeleteConfirm","refreshArticles","_ref4","_callee2","_context2","article","Modal","confirm","icon","ExclamationCircleFilled","content","okText","okType","cancelText","onOk","_onOk","_callee3","_context3","_ref5","_callee4","_context4","_x","_ref6","_callee5","_context5","setFieldValue","_x2","updateArticleTags","_ref7","_callee6","articleId","_context6","finish","_x3","_x4","PageCard","extra","Table","dataSource","rowKey","open","submit","onCancel","confirmLoading","afterClose","resetFields","name","form","labelCol","span","wrapperCol","style","maxWidth","onFinish","values","autoComplete","Item","label","hidden","InputNumber","Select","mode","allowClear","width","placeholder","options","value","Component"],"sourceRoot":""}