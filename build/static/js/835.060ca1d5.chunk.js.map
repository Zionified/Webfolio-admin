{"version":3,"file":"static/js/835.060ca1d5.chunk.js","mappings":"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","sources":["pages/EditArticle/index.tsx","requests/tag.ts","requests/article.ts","requests/experience.ts","requests/project.ts","requests/mapping.ts"],"sourcesContent":["import { Article, Tag } from \"@/types\"\nimport {\n    Checkbox,\n    FloatButton,\n    Form,\n    Input,\n    InputNumber,\n    Modal,\n    Select,\n} from \"antd\"\nimport { useEffect, useState, useRef } from \"react\"\nimport Vditor from \"vditor\"\nimport \"vditor/dist/index.css\"\nimport * as api from \"@/requests\"\nimport { useLoaderData, useNavigate } from \"react-router-dom\"\n\nexport const loader = async ({ params }: any) => {\n    return {\n        article: await api.getArticle(params.articleId),\n        tags: await api.listTags(),\n    }\n}\n\nconst EditArticle = () => {\n    const refEditor = useRef<HTMLDivElement>(null)\n    const [vditor, setVditor] = useState<Vditor>()\n    const [isModalEditArticleOpen, setIsModalEditArticleOpen] = useState(false)\n    const [\n        isModalEditArticleConfirmLoading,\n        setIsModalEditArticleConfirmLoading,\n    ] = useState(false)\n\n    const [formEditArticle] = Form.useForm()\n    const navigate = useNavigate()\n    const loaderData = useLoaderData() as { article: Article; tags: Tag[] }\n    const article = loaderData.article\n    const tags = loaderData.tags\n\n    useEffect(() => {\n        if (refEditor.current) {\n            const vd = new Vditor(refEditor.current, {\n                cache: { enable: false },\n                height: \"100%\",\n                lang: \"en_US\",\n                after: () => {\n                    vd.setValue(article.markdown)\n                    setVditor(vd)\n                }\n            })\n            \n        }\n    }, [refEditor, setVditor, article.markdown])\n\n    const updateArticle = async (values: any) => {\n        try {\n            setIsModalEditArticleConfirmLoading(true)\n            await api.updateArticle(values.id, {\n                title: values.title,\n                tags: values.tags,\n                markdown: vditor!.getValue(),\n            })\n            setIsModalEditArticleOpen(false)\n            navigate(\"/articles\")\n        } catch (err) {\n        } finally {\n            setIsModalEditArticleConfirmLoading(false)\n        }\n    }\n\n    return (\n        <>\n            <div id=\"markdown-editor\" ref={refEditor}></div>\n            {vditor && (\n                <FloatButton.Group shape=\"circle\" style={{ right: 24 }}>\n                    <FloatButton\n                        onClick={() => setIsModalEditArticleOpen(true)}\n                    />\n                    {/* <FloatButton.BackTop visibilityHeight={0} /> */}\n                </FloatButton.Group>\n            )}\n            <Modal\n                title=\"Edit Article\"\n                open={isModalEditArticleOpen}\n                onOk={() => formEditArticle.submit()}\n                onCancel={() => setIsModalEditArticleOpen(false)}\n                confirmLoading={isModalEditArticleConfirmLoading}\n                afterClose={() => formEditArticle.resetFields()}\n            >\n                <Form\n                    name=\"formEditArticle\"\n                    form={formEditArticle}\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    style={{ maxWidth: 600 }}\n                    onFinish={(values) => {\n                        updateArticle(values)\n                    }}\n                    initialValues={{\n                        id: article.id,\n                        title: article.title,\n                        visible: article.visible,\n                        tags: article.tags,\n                    }}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item label=\"id\" name=\"id\" hidden>\n                        <InputNumber />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Title\"\n                        name=\"title\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input your article's title!\",\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        valuePropName=\"checked\"\n                        label=\"Visibility\"\n                        name=\"visible\"\n                        hidden\n                    >\n                        <Checkbox />\n                    </Form.Item>\n                    <Form.Item label=\"Tags\" name=\"tags\">\n                        <Select\n                            mode=\"multiple\"\n                            allowClear\n                            style={{ width: \"100%\" }}\n                            placeholder=\"Please select\"\n                            options={tags.map((tag) => {\n                                return { label: tag.tag, value: tag.tag }\n                            })}\n                        />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    )\n}\n\nexport const Component = EditArticle\nexport default EditArticle\n","import type { Tag } from \"@/types\"\nimport axios from \"axios\"\n\nexport const addTag = async (tag: string) => {\n    await axios.post(\"/api/admin/v1/tag\", {tag})\n}\n\nexport const deleteTag = async (tag: string) => {\n    await axios.delete(`/api/admin/v1/tag/${tag}`)\n}\n\nexport const renameTag = async (originalTag: string, newTag: string) => {\n    await axios.put(`/api/admin/v1/tag/${originalTag}`, {newTag: newTag})\n}\n\nexport const listTags = async () => {\n    const response = await axios.get(\"/api/admin/v1/tags\")\n    return response.data.data.items as Tag[]\n}\n\n// export const getTag = async (tag: string) => {\n//     const response = await axios.get(`/api/admin/v1/tag/${tag}`)\n//     return response.data.data.tag as Tag\n// }","import { Article } from \"@/types\"\nimport axios from \"axios\"\n\nexport const addArticle = async ({title, tags, markdown, visible}: {title: string, tags: string[], markdown: string, visible: boolean}) => {\n    await axios.post(\"/api/admin/v1/article\", {title, tags, markdown, visible})\n}\n\nexport const listArticles = async () => {\n    const response = await axios.get(\"/api/admin/v1/articles\")\n    return response.data.data.items as Article[]\n}\n\nexport const deleteArticle = async (articleId: number) => {\n    await axios.delete(`/api/admin/v1/article/${articleId}`)\n}\n\nexport const updateArticle = async (articleId: number, values: {title?: string, markdown?: string, tags?: string[], visible?: boolean}) => {\n    await axios.put(`/api/admin/v1/article/${articleId}`, values)\n}\n\nexport const getArticle = async (articleId: number) => {\n    const response = await axios.get(`/api/admin/v1/article/${articleId}`)\n    return response.data.data.article as Article\n}\n\n","import { Experience } from \"@/types\"\nimport axios from \"axios\"\n\nexport const addExperience = async (name: string, timeline: string, roles: string[], company: string, description: string, tags: string[], visible: boolean, sort: number) => {\n    return await axios.post(\"/api/admin/v1/experience\", {name, timeline, roles, company, description, tags, visible, sort})\n}\n\nexport const listExperiences = async () => {\n    const response = await axios.get(\"/api/admin/v1/experiences\")\n    return response.data.data.items as Experience[]\n}\n\nexport const deleteExperience = async (experienceId: number) => {\n    await axios.delete(`/api/admin/v1/experience/${experienceId}`)\n}\n\nexport const updateExperience = async (experienceId: number, values: {name?: string, company?: string, timeline?: string, description?: string, visible?: boolean, roles?: string[], tags?: string[], sort: number}) => {\n    await axios.put(`/api/admin/v1/experience/${experienceId}`, values)\n}\n\nexport const getExperience = async (experienceId: number) => {\n    const response = await axios.get(`/api/admin/v1/experience/${experienceId}`)\n    return response.data.data.experience as Experience\n}","import axios from \"axios\"\nimport { Project } from \"@/types\"\n\nexport const addProject = async (\n    title: string,\n    name: string,\n    description: string,\n    image: string,\n    visible: boolean,\n    tags: string[],\n    sort: number,\n    github: string,\n    starCount: number,\n    installCount: number,\n) => {\n    await axios.post(\"/api/admin/v1/project\", {title, name, description, image, visible, tags, sort, github, starCount, installCount})\n}\n\nexport const listProjects = async () => {\n    const response = await axios.get(\"/api/admin/v1/projects\")\n    return response.data.data.items as Project[]\n}\n\nexport const getProject = async (projectId: number) => {\n    const response = await axios.get(`/api/admin/v1/project/${projectId}`)\n    return response.data.data.project as Project\n}\n\nexport const deleteProject = async (projectId: number) => {\n    await axios.delete(`/api/admin/v1/project/${projectId}`)\n}\n\nexport const updateProject = async (projectId: number, values: {name?: string, title?: string, description?: string, image?: string, visible?: boolean, tags?: string[], github?: string, starCount?: number, installCount?: number, sort?: number}) => {\n    await axios.put(`/api/admin/v1/project/${projectId}`, values)\n}","import axios from \"axios\"\n\nexport const getMapping = async (key: string) => {\n    const response = await axios.get(\"/api/admin/v1/mappings\", {\n        params: { keys: JSON.stringify([key]) },\n    })\n    return response.data.data[key] as string\n}\n\nexport const updateMapping = async (key: string, value: string) => {\n    await axios.put(`/api/admin/v1/mapping/${key}`, {value})\n}\n"],"names":["loader","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","params","wrap","_context","prev","next","api","articleId","t0","sent","t1","abrupt","article","tags","stop","_x","apply","arguments","EditArticle","refEditor","useRef","_useState","useState","_useState2","_slicedToArray","vditor","setVditor","_useState3","_useState4","isModalEditArticleOpen","setIsModalEditArticleOpen","_useState5","_useState6","isModalEditArticleConfirmLoading","setIsModalEditArticleConfirmLoading","_Form$useForm","Form","useForm","formEditArticle","navigate","useNavigate","loaderData","useLoaderData","useEffect","current","vd","Vditor","cache","enable","height","lang","after","setValue","markdown","updateArticle","_ref3","_callee2","values","_context2","id","title","getValue","finish","_x2","_jsxs","_Fragment","children","_jsx","ref","FloatButton","Group","shape","style","right","onClick","Modal","open","onOk","submit","onCancel","confirmLoading","afterClose","resetFields","name","form","labelCol","span","wrapperCol","maxWidth","onFinish","initialValues","visible","autoComplete","Item","label","hidden","InputNumber","rules","required","message","Input","valuePropName","Checkbox","Select","mode","allowClear","width","placeholder","options","map","tag","value","Component","addTag","axios","post","deleteTag","delete","concat","renameTag","_callee3","originalTag","newTag","_context3","put","_x3","_x4","listTags","_ref4","_callee4","response","_context4","get","data","items","addArticle","listArticles","deleteArticle","_ref5","getArticle","_ref6","_callee5","_context5","_x5","addExperience","timeline","roles","company","description","sort","_x6","_x7","_x8","listExperiences","deleteExperience","experienceId","_x9","updateExperience","_x10","_x11","addProject","image","github","starCount","installCount","listProjects","deleteProject","projectId","_x12","updateProject","_x13","_x14","getMapping","key","keys","JSON","stringify","updateMapping"],"sourceRoot":""}