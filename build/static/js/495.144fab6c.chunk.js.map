{"version":3,"file":"static/js/495.144fab6c.chunk.js","mappings":"wWAQaA,EAAM,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACLC,EAAAA,KAAc,cAAAH,EAAAI,OAAA,SAAAJ,EAAAK,MAAA,wBAAAL,EAAAM,OAAA,GAAAR,EAAA,KAC9B,kBAFkB,OAAAJ,EAAAa,MAAA,KAAAC,UAAA,KAIbC,EAAa,WACf,IAAMC,GAAYC,EAAAA,EAAAA,QAAuB,MACzCC,GAA4BC,EAAAA,EAAAA,YAAkBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA0DL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlEE,EAAqBD,EAAA,GAAEE,EAAwBF,EAAA,GACtDG,GAGIT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAFfE,EAA+BD,EAAA,GAC/BE,EAAkCF,EAAA,GAEhCG,GAAOC,EAAAA,EAAAA,MACbC,EAAyBC,EAAAA,EAAKC,UAAvBC,GAAgChB,EAAAA,EAAAA,GAAAa,EAAA,GAAlB,GACfI,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACN,GAAIxB,EAAUyB,QACV,IAAMC,EAAK,IAAIC,IAAJ,CAAW3B,EAAUyB,QAAS,CACrCG,MAAO,CAAEC,QAAQ,GACjBC,OAAQ,OACRC,MAAO,SAACC,GAAW,EACnBC,KAAM,QACNC,MAAO,WACH3B,EAAUmB,EACd,GAGZ,GAAG,CAAC1B,EAAWO,IAEf,IAAM4B,EAAU,eAAAC,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkD,EAAOC,GAAW,OAAApD,EAAAA,EAAAA,KAAAG,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,OAEW,OAFX+C,EAAAhD,KAAA,EAE7BwB,GAAmC,GAAKwB,EAAA/C,KAAA,EAClCC,EAAAA,GAAe,CACjB+C,MAAOF,EAAOE,MACdxB,KAAMsB,EAAOtB,KACbyB,SAAUnC,EAAQoC,WAClBC,QAASL,EAAOK,UAClB,OACFhC,GAAyB,GACzBW,EAAS,aAAYiB,EAAA/C,KAAA,gBAAA+C,EAAAhD,KAAA,EAAAgD,EAAAK,GAAAL,EAAA,iBAGoB,OAHpBA,EAAAhD,KAAA,GAGrBwB,GAAmC,GAAMwB,EAAAM,OAAA,6BAAAN,EAAA3C,OAAA,GAAAyC,EAAA,wBAEhD,gBAfeS,GAAA,OAAAV,EAAAvC,MAAA,KAAAC,UAAA,KAiBhB,OACIiD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKC,GAAG,kBAAkBC,IAAKpD,IAC9BM,IACG4C,EAAAA,EAAAA,KAACG,EAAAA,EAAYC,MAAK,CAACC,MAAM,SAASC,MAAO,CAAEC,MAAO,IAAKR,UACnDC,EAAAA,EAAAA,KAACG,EAAAA,EAAW,CACRK,QAAS,kBAAM/C,GAAyB,EAAK,OAKzDuC,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACFnB,MAAM,cACNoB,KAAMlD,EACNmD,KAAM,kBAAMxC,EAAeyC,QAAQ,EACnCC,SAAU,kBAAMpD,GAAyB,EAAM,EAC/CqD,eAAgBlD,EAChBmD,WAAY,kBAAM5C,EAAe6C,aAAa,EAACjB,UAE/CF,EAAAA,EAAAA,MAAC5B,EAAAA,EAAI,CACDgD,KAAK,iBACLC,KAAM/C,EACNgD,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBd,MAAO,CAAEgB,SAAU,KACnBC,SAAU,SAACnC,GACPH,EAAWG,EACf,EACAoC,cAAe,CAAElC,MAAO,GAAIG,SAAS,EAAO3B,KAAM,IAClD2D,aAAa,MAAK1B,SAAA,EAElBC,EAAAA,EAAAA,KAAC/B,EAAAA,EAAKyD,KAAI,CACNC,MAAM,QACNV,KAAK,QACLW,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,uCAEf/B,UAEFC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,OAEV/B,EAAAA,EAAAA,KAAC/B,EAAAA,EAAKyD,KAAI,CACNM,cAAc,UACdL,MAAM,aACNV,KAAK,UACLgB,QAAM,EAAAlC,UAENC,EAAAA,EAAAA,KAACkC,EAAAA,EAAQ,OAEblC,EAAAA,EAAAA,KAAC/B,EAAAA,EAAKyD,KAAI,CAACC,MAAM,OAAOV,KAAK,OAAMlB,UAC/BC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACHC,KAAK,WACLC,YAAU,EACV/B,MAAO,CAAEgC,MAAO,QAChBC,YAAY,gBACZC,QAAS1E,EAAK2E,KAAI,SAACC,GACf,MAAO,CAAEf,MAAOe,EAAIA,IAAK5D,MAAO4D,EAAIA,IACxC,eAO5B,EAEaC,EAAY9F,EACzB,W,ygBCzHa+F,EAAM,eAAA9G,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOwG,GAAW,OAAA1G,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC9BuG,EAAAA,EAAMC,KAAK,oBAAqB,CAACJ,IAAAA,IAAK,wBAAAtG,EAAAM,OAAA,GAAAR,EAAA,KAC/C,gBAFkB0D,GAAA,OAAA9D,EAAAa,MAAA,KAAAC,UAAA,KAINmG,EAAS,eAAA7D,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkD,EAAOuD,GAAW,OAAA1G,EAAAA,EAAAA,KAAAG,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACjCuG,EAAAA,EAAMG,OAAO,qBAADC,OAAsBP,IAAM,wBAAArD,EAAA3C,OAAA,GAAAyC,EAAA,KACjD,gBAFqB+D,GAAA,OAAAhE,EAAAvC,MAAA,KAAAC,UAAA,KAITuG,EAAS,eAAAC,GAAArH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoH,EAAOC,EAAqBC,GAAc,OAAAvH,EAAAA,EAAAA,KAAAG,MAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,cAAAkH,EAAAlH,KAAA,EACzDuG,EAAAA,EAAMY,IAAI,qBAADR,OAAsBK,GAAe,CAACC,OAAQA,IAAQ,wBAAAC,EAAA9G,OAAA,GAAA2G,EAAA,KACxE,gBAFqBK,EAAAC,GAAA,OAAAP,EAAAzG,MAAA,KAAAC,UAAA,KAITgH,EAAQ,eAAAC,GAAA9H,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA6H,IAAA,IAAAC,EAAA,OAAA/H,EAAAA,EAAAA,KAAAG,MAAA,SAAA6H,GAAA,cAAAA,EAAA3H,KAAA2H,EAAA1H,MAAA,cAAA0H,EAAA1H,KAAA,EACGuG,EAAAA,EAAMoB,IAAI,sBAAqB,OAAxC,OAARF,EAAQC,EAAAvH,KAAAuH,EAAAxH,OAAA,SACPuH,EAASG,KAAKA,KAAKC,OAAK,wBAAAH,EAAAtH,OAAA,GAAAoH,EAAA,KAClC,kBAHoB,OAAAD,EAAAlH,MAAA,KAAAC,UAAA,KCZRqC,G,QAAU,eAAAC,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAAJ,GAAA,IAAAwD,EAAAxB,EAAAyB,EAAAE,EAAA,OAAAzD,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAsC,OAA9BgD,EAAKxD,EAALwD,MAAOxB,EAAIhC,EAAJgC,KAAMyB,EAAQzD,EAARyD,SAAUE,EAAO3D,EAAP2D,QAAOrD,EAAAE,KAAA,EACtDuG,EAAAA,EAAMC,KAAK,wBAAyB,CAACxD,MAAAA,EAAOxB,KAAAA,EAAMyB,SAAAA,EAAUE,QAAAA,IAAS,wBAAArD,EAAAM,OAAA,GAAAR,EAAA,KAC9E,gBAFsB0D,GAAA,OAAAV,EAAAvC,MAAA,KAAAC,UAAA,MAIVwH,EAAY,eAAAhB,GAAArH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkD,IAAA,IAAA4E,EAAA,OAAA/H,EAAAA,EAAAA,KAAAG,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACDuG,EAAAA,EAAMoB,IAAI,0BAAyB,OAA5C,OAARF,EAAQ1E,EAAA5C,KAAA4C,EAAA7C,OAAA,SACPuH,EAASG,KAAKA,KAAKC,OAAK,wBAAA9E,EAAA3C,OAAA,GAAAyC,EAAA,KAClC,kBAHwB,OAAAiE,EAAAzG,MAAA,KAAAC,UAAA,KAKZyH,EAAa,eAAAR,GAAA9H,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoH,EAAOiB,GAAiB,OAAAtI,EAAAA,EAAAA,KAAAG,MAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,cAAAkH,EAAAlH,KAAA,EAC3CuG,EAAAA,EAAMG,OAAO,yBAADC,OAA0BqB,IAAY,wBAAAd,EAAA9G,OAAA,GAAA2G,EAAA,KAC3D,gBAFyBH,GAAA,OAAAW,EAAAlH,MAAA,KAAAC,UAAA,KAIb2H,EAAa,eAAAC,GAAAzI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA6H,EAAOQ,EAAmBlF,GAA+E,OAAApD,EAAAA,EAAAA,KAAAG,MAAA,SAAA6H,GAAA,cAAAA,EAAA3H,KAAA2H,EAAA1H,MAAA,cAAA0H,EAAA1H,KAAA,EAC5HuG,EAAAA,EAAMY,IAAI,yBAADR,OAA0BqB,GAAalF,GAAO,wBAAA4E,EAAAtH,OAAA,GAAAoH,EAAA,KAChE,gBAFyBJ,EAAAC,GAAA,OAAAa,EAAA7H,MAAA,KAAAC,UAAA,KAIb6H,EAAU,eAAAC,GAAA3I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0I,EAAOL,GAAiB,IAAAP,EAAA,OAAA/H,EAAAA,EAAAA,KAAAG,MAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,cAAAsI,EAAAtI,KAAA,EACvBuG,EAAAA,EAAMoB,IAAI,yBAADhB,OAA0BqB,IAAY,OAAxD,OAARP,EAAQa,EAAAnI,KAAAmI,EAAApI,OAAA,SACPuH,EAASG,KAAKA,KAAKW,SAAO,wBAAAD,EAAAlI,OAAA,GAAAiI,EAAA,KACpC,gBAHsBG,GAAA,OAAAJ,EAAA/H,MAAA,KAAAC,UAAA,KCjBVmI,EAAa,eAAAjJ,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO+E,EAAc+D,EAAkBC,EAAiBC,EAAiBC,EAAqBrH,EAAgB2B,EAAkB2F,GAAY,OAAApJ,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACxJuG,EAAAA,EAAMC,KAAK,2BAA4B,CAAC7B,KAAAA,EAAM+D,SAAAA,EAAUC,MAAAA,EAAOC,QAAAA,EAASC,YAAAA,EAAarH,KAAAA,EAAM2B,QAAAA,EAAS2F,KAAAA,IAAM,cAAAhJ,EAAAI,OAAA,SAAAJ,EAAAK,MAAA,wBAAAL,EAAAM,OAAA,GAAAR,EAAA,KAC1H,gBAFyB0D,EAAAsD,EAAAQ,EAAAC,EAAAmB,EAAAO,EAAAC,EAAAC,GAAA,OAAAzJ,EAAAa,MAAA,KAAAC,UAAA,KAIb4I,EAAe,eAAAtG,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkD,IAAA,IAAA4E,EAAA,OAAA/H,EAAAA,EAAAA,KAAAG,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACJuG,EAAAA,EAAMoB,IAAI,6BAA4B,OAA/C,OAARF,EAAQ1E,EAAA5C,KAAA4C,EAAA7C,OAAA,SACPuH,EAASG,KAAKA,KAAKC,OAAK,wBAAA9E,EAAA3C,OAAA,GAAAyC,EAAA,KAClC,kBAH2B,OAAAD,EAAAvC,MAAA,KAAAC,UAAA,KAKf6I,EAAgB,eAAArC,GAAArH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoH,EAAOqC,GAAoB,OAAA1J,EAAAA,EAAAA,KAAAG,MAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,cAAAkH,EAAAlH,KAAA,EACjDuG,EAAAA,EAAMG,OAAO,4BAADC,OAA6ByC,IAAe,wBAAAlC,EAAA9G,OAAA,GAAA2G,EAAA,KACjE,gBAF4BsC,GAAA,OAAAvC,EAAAzG,MAAA,KAAAC,UAAA,KAIhBgJ,EAAgB,eAAA/B,GAAA9H,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA6H,EAAO4B,EAAsBtG,GAAsJ,OAAApD,EAAAA,EAAAA,KAAAG,MAAA,SAAA6H,GAAA,cAAAA,EAAA3H,KAAA2H,EAAA1H,MAAA,cAAA0H,EAAA1H,KAAA,EACzMuG,EAAAA,EAAMY,IAAI,4BAADR,OAA6ByC,GAAgBtG,GAAO,wBAAA4E,EAAAtH,OAAA,GAAAoH,EAAA,KACtE,gBAF4B+B,EAAAC,GAAA,OAAAjC,EAAAlH,MAAA,KAAAC,UAAA,KCbhBmJ,EAAU,eAAAjK,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EACtBoD,EACA2B,EACAkE,EACAa,EACAvG,EACA3B,EACAsH,EACAa,EACAC,EACAC,GAAoB,OAAAnK,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEduG,EAAAA,EAAMC,KAAK,wBAAyB,CAACxD,MAAAA,EAAO2B,KAAAA,EAAMkE,YAAAA,EAAaa,MAAAA,EAAOvG,QAAAA,EAAS3B,KAAAA,EAAMsH,KAAAA,EAAMa,OAAAA,EAAQC,UAAAA,EAAWC,aAAAA,IAAc,wBAAA/J,EAAAM,OAAA,GAAAR,EAAA,KACrI,gBAbsB0D,EAAAsD,EAAAQ,EAAAC,EAAAmB,EAAAO,EAAAC,EAAAC,EAAAI,EAAAE,GAAA,OAAA/J,EAAAa,MAAA,KAAAC,UAAA,KAeVwJ,EAAY,eAAAlH,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkD,IAAA,IAAA4E,EAAA,OAAA/H,EAAAA,EAAAA,KAAAG,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACDuG,EAAAA,EAAMoB,IAAI,0BAAyB,OAA5C,OAARF,EAAQ1E,EAAA5C,KAAA4C,EAAA7C,OAAA,SACPuH,EAASG,KAAKA,KAAKC,OAAK,wBAAA9E,EAAA3C,OAAA,GAAAyC,EAAA,KAClC,kBAHwB,OAAAD,EAAAvC,MAAA,KAAAC,UAAA,KAUZyJ,EAAa,eAAAxC,GAAA9H,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA6H,EAAOwC,GAAiB,OAAAtK,EAAAA,EAAAA,KAAAG,MAAA,SAAA6H,GAAA,cAAAA,EAAA3H,KAAA2H,EAAA1H,MAAA,cAAA0H,EAAA1H,KAAA,EAC3CuG,EAAAA,EAAMG,OAAO,yBAADC,OAA0BqD,IAAY,wBAAAtC,EAAAtH,OAAA,GAAAoH,EAAA,KAC3D,gBAFyByC,GAAA,OAAA1C,EAAAlH,MAAA,KAAAC,UAAA,KAIb4J,EAAa,eAAAhC,GAAAzI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0I,EAAO2B,EAAmBlH,GAA4L,OAAApD,EAAAA,EAAAA,KAAAG,MAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,cAAAsI,EAAAtI,KAAA,EACzOuG,EAAAA,EAAMY,IAAI,yBAADR,OAA0BqD,GAAalH,GAAO,wBAAAwF,EAAAlI,OAAA,GAAAiI,EAAA,KAChE,gBAFyB8B,EAAAC,GAAA,OAAAlC,EAAA7H,MAAA,KAAAC,UAAA,KC9Bb+J,EAAU,eAAA7K,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO0K,GAAW,IAAA7C,EAAA,OAAA/H,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBuG,EAAAA,EAAMoB,IAAI,yBAA0B,CACvD4C,OAAQ,CAAEC,KAAMC,KAAKC,UAAU,CAACJ,OAClC,OAFY,OAAR7C,EAAQ3H,EAAAK,KAAAL,EAAAI,OAAA,SAGPuH,EAASG,KAAKA,KAAK0C,IAAI,wBAAAxK,EAAAM,OAAA,GAAAR,EAAA,KACjC,gBALsB0D,GAAA,OAAA9D,EAAAa,MAAA,KAAAC,UAAA,KAOVqK,EAAa,eAAA/H,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkD,EAAOyH,EAAa9H,GAAa,OAAA9C,EAAAA,EAAAA,KAAAG,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACpDuG,EAAAA,EAAMY,IAAI,yBAADR,OAA0B2D,GAAO,CAAC9H,MAAAA,IAAO,wBAAAO,EAAA3C,OAAA,GAAAyC,EAAA,KAC3D,gBAFyB+D,EAAAQ,GAAA,OAAAxE,EAAAvC,MAAA,KAAAC,UAAA,I","sources":["pages/AddArticle/index.tsx","requests/tag.ts","requests/article.ts","requests/experience.ts","requests/project.ts","requests/mapping.ts"],"sourcesContent":["import { Tag } from \"@/types\"\nimport { Checkbox, FloatButton, Form, Input, Modal, Select } from \"antd\"\nimport { useEffect, useState, useRef } from \"react\"\nimport Vditor from \"vditor\"\nimport \"vditor/dist/index.css\"\nimport * as api from \"@/requests\"\nimport { useLoaderData, useNavigate } from \"react-router-dom\"\n\nexport const loader = async () => {\n    return await api.listTags()\n}\n\nconst AddArticle = () => {\n    const refEditor = useRef<HTMLDivElement>(null)\n    const [vditor, setVditor] = useState<Vditor>()\n    const [isModalAddArticleOpen, setIsModalAddArticleOpen] = useState(false)\n    const [\n        isModalAddArticleConfirmLoading,\n        setIsModalAddArticleConfirmLoading,\n    ] = useState(false)\n    const tags = useLoaderData() as Tag[]\n    const [formAddArticle] = Form.useForm()\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if (refEditor.current) {\n            const vd = new Vditor(refEditor.current, {\n                cache: { enable: false },\n                height: \"100%\",\n                input: (value) => {},\n                lang: \"en_US\",\n                after: () => {\n                    setVditor(vd)\n                }\n            })\n        }\n    }, [refEditor, setVditor])\n\n    const addArticle = async (values: any) => {\n        try {\n            setIsModalAddArticleConfirmLoading(true)\n            await api.addArticle({\n                title: values.title,\n                tags: values.tags,\n                markdown: vditor!.getValue(),\n                visible: values.visible,\n            })\n            setIsModalAddArticleOpen(false)\n            navigate(\"/articles\")\n        } catch (err) {\n        } finally {\n            setIsModalAddArticleConfirmLoading(false)\n        }\n    }\n\n    return (\n        <>\n            <div id=\"markdown-editor\" ref={refEditor}></div>\n            {vditor && (\n                <FloatButton.Group shape=\"circle\" style={{ right: 24 }}>\n                    <FloatButton\n                        onClick={() => setIsModalAddArticleOpen(true)}\n                    />\n                    {/* <FloatButton.BackTop visibilityHeight={0} /> */}\n                </FloatButton.Group>\n            )}\n            <Modal\n                title=\"Add Article\"\n                open={isModalAddArticleOpen}\n                onOk={() => formAddArticle.submit()}\n                onCancel={() => setIsModalAddArticleOpen(false)}\n                confirmLoading={isModalAddArticleConfirmLoading}\n                afterClose={() => formAddArticle.resetFields()}\n            >\n                <Form\n                    name=\"formAddArticle\"\n                    form={formAddArticle}\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    style={{ maxWidth: 600 }}\n                    onFinish={(values) => {\n                        addArticle(values)\n                    }}\n                    initialValues={{ title: \"\", visible: false, tags: [] }}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Title\"\n                        name=\"title\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input your article's title!\",\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        valuePropName=\"checked\"\n                        label=\"Visibility\"\n                        name=\"visible\"\n                        hidden\n                    >\n                        <Checkbox />\n                    </Form.Item>\n                    <Form.Item label=\"Tags\" name=\"tags\">\n                        <Select\n                            mode=\"multiple\"\n                            allowClear\n                            style={{ width: \"100%\" }}\n                            placeholder=\"Please select\"\n                            options={tags.map((tag) => {\n                                return { label: tag.tag, value: tag.tag }\n                            })}\n                        />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    )\n}\n\nexport const Component = AddArticle\nexport default AddArticle\n","import type { Tag } from \"@/types\"\nimport axios from \"axios\"\n\nexport const addTag = async (tag: string) => {\n    await axios.post(\"/api/admin/v1/tag\", {tag})\n}\n\nexport const deleteTag = async (tag: string) => {\n    await axios.delete(`/api/admin/v1/tag/${tag}`)\n}\n\nexport const renameTag = async (originalTag: string, newTag: string) => {\n    await axios.put(`/api/admin/v1/tag/${originalTag}`, {newTag: newTag})\n}\n\nexport const listTags = async () => {\n    const response = await axios.get(\"/api/admin/v1/tags\")\n    return response.data.data.items as Tag[]\n}\n\n// export const getTag = async (tag: string) => {\n//     const response = await axios.get(`/api/admin/v1/tag/${tag}`)\n//     return response.data.data.tag as Tag\n// }","import { Article } from \"@/types\"\nimport axios from \"axios\"\n\nexport const addArticle = async ({title, tags, markdown, visible}: {title: string, tags: string[], markdown: string, visible: boolean}) => {\n    await axios.post(\"/api/admin/v1/article\", {title, tags, markdown, visible})\n}\n\nexport const listArticles = async () => {\n    const response = await axios.get(\"/api/admin/v1/articles\")\n    return response.data.data.items as Article[]\n}\n\nexport const deleteArticle = async (articleId: number) => {\n    await axios.delete(`/api/admin/v1/article/${articleId}`)\n}\n\nexport const updateArticle = async (articleId: number, values: {title?: string, markdown?: string, tags?: string[], visible?: boolean}) => {\n    await axios.put(`/api/admin/v1/article/${articleId}`, values)\n}\n\nexport const getArticle = async (articleId: number) => {\n    const response = await axios.get(`/api/admin/v1/article/${articleId}`)\n    return response.data.data.article as Article\n}\n\n","import { Experience } from \"@/types\"\nimport axios from \"axios\"\n\nexport const addExperience = async (name: string, timeline: string, roles: string[], company: string, description: string, tags: string[], visible: boolean, sort: number) => {\n    return await axios.post(\"/api/admin/v1/experience\", {name, timeline, roles, company, description, tags, visible, sort})\n}\n\nexport const listExperiences = async () => {\n    const response = await axios.get(\"/api/admin/v1/experiences\")\n    return response.data.data.items as Experience[]\n}\n\nexport const deleteExperience = async (experienceId: number) => {\n    await axios.delete(`/api/admin/v1/experience/${experienceId}`)\n}\n\nexport const updateExperience = async (experienceId: number, values: {name?: string, company?: string, timeline?: string, description?: string, visible?: boolean, roles?: string[], tags?: string[], sort: number}) => {\n    await axios.put(`/api/admin/v1/experience/${experienceId}`, values)\n}\n\nexport const getExperience = async (experienceId: number) => {\n    const response = await axios.get(`/api/admin/v1/experience/${experienceId}`)\n    return response.data.data.experience as Experience\n}","import axios from \"axios\"\nimport { Project } from \"@/types\"\n\nexport const addProject = async (\n    title: string,\n    name: string,\n    description: string,\n    image: string,\n    visible: boolean,\n    tags: string[],\n    sort: number,\n    github: string,\n    starCount: number,\n    installCount: number,\n) => {\n    await axios.post(\"/api/admin/v1/project\", {title, name, description, image, visible, tags, sort, github, starCount, installCount})\n}\n\nexport const listProjects = async () => {\n    const response = await axios.get(\"/api/admin/v1/projects\")\n    return response.data.data.items as Project[]\n}\n\nexport const getProject = async (projectId: number) => {\n    const response = await axios.get(`/api/admin/v1/project/${projectId}`)\n    return response.data.data.project as Project\n}\n\nexport const deleteProject = async (projectId: number) => {\n    await axios.delete(`/api/admin/v1/project/${projectId}`)\n}\n\nexport const updateProject = async (projectId: number, values: {name?: string, title?: string, description?: string, image?: string, visible?: boolean, tags?: string[], github?: string, starCount?: number, installCount?: number, sort?: number}) => {\n    await axios.put(`/api/admin/v1/project/${projectId}`, values)\n}","import axios from \"axios\"\n\nexport const getMapping = async (key: string) => {\n    const response = await axios.get(\"/api/admin/v1/mappings\", {\n        params: { keys: JSON.stringify([key]) },\n    })\n    return response.data.data[key] as string\n}\n\nexport const updateMapping = async (key: string, value: string) => {\n    await axios.put(`/api/admin/v1/mapping/${key}`, {value})\n}\n"],"names":["loader","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","api","abrupt","sent","stop","apply","arguments","AddArticle","refEditor","useRef","_useState","useState","_useState2","_slicedToArray","vditor","setVditor","_useState3","_useState4","isModalAddArticleOpen","setIsModalAddArticleOpen","_useState5","_useState6","isModalAddArticleConfirmLoading","setIsModalAddArticleConfirmLoading","tags","useLoaderData","_Form$useForm","Form","useForm","formAddArticle","navigate","useNavigate","useEffect","current","vd","Vditor","cache","enable","height","input","value","lang","after","addArticle","_ref2","_callee2","values","_context2","title","markdown","getValue","visible","t0","finish","_x","_jsxs","_Fragment","children","_jsx","id","ref","FloatButton","Group","shape","style","right","onClick","Modal","open","onOk","submit","onCancel","confirmLoading","afterClose","resetFields","name","form","labelCol","span","wrapperCol","maxWidth","onFinish","initialValues","autoComplete","Item","label","rules","required","message","Input","valuePropName","hidden","Checkbox","Select","mode","allowClear","width","placeholder","options","map","tag","Component","addTag","axios","post","deleteTag","delete","concat","_x2","renameTag","_ref3","_callee3","originalTag","newTag","_context3","put","_x3","_x4","listTags","_ref4","_callee4","response","_context4","get","data","items","listArticles","deleteArticle","articleId","updateArticle","_ref5","getArticle","_ref6","_callee5","_context5","article","_x5","addExperience","timeline","roles","company","description","sort","_x6","_x7","_x8","listExperiences","deleteExperience","experienceId","_x9","updateExperience","_x10","_x11","addProject","image","github","starCount","installCount","listProjects","deleteProject","projectId","_x12","updateProject","_x13","_x14","getMapping","key","params","keys","JSON","stringify","updateMapping"],"sourceRoot":""}